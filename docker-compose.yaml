services:
  postgres_keycloak:
    image: postgres:${POSTGRES_VERSION}
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
    volumes:
      - keycloak_pgdata:/var/lib/postgresql/data

  keycloak:
    image: quay.io/keycloak/keycloak:${KC_VERSION}
    command: ["start-dev", "--import-realm"]
    restart: unless-stopped
    depends_on:
      postgres_keycloak:
        condition: service_started
    environment:
      KC_DB: postgres
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: password
      KC_DB_URL: "jdbc:postgresql://postgres_keycloak:5432/keycloak"
      KC_HTTP_RELATIVE_PATH: "/keycloak/"
      KC_LOG_LEVEL: ${KC_LOG_LEVEL}
      KC_HOSTNAME: https://diadamae2025.ddns.net/keycloak/
      KC_REALM_NAME: ${KC_REALM_NAME}
      KC_BOOTSTRAP_ADMIN_USERNAME: ${KEYCLOAK_ADMIN}
      KC_BOOTSTRAP_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      PROXY_ADDRESS_FORWARDING: "true"
    volumes:
      - ./keycloak/:/opt/keycloak/data/import/:ro

  #frontend:
  #  build: 
  #    context: frontend
  #    dockerfile: Dockerfile
  #  command: sh -c "npm i && npm start -- --host 0.0.0.0"
  #  ports:
  #    - 4200:4200
  #  working_dir: /home/node/app
  #  volumes:
  #    - ./frontend/:/home/node/app
  #    - ./frontend/node_modules:/home/node/app/node_modules
  backend:
    build:
      context: backend
      dockerfile: src/main/docker/Dockerfile.jvm
    depends_on:
      postgres_backend:
        condition: service_started
    environment:
       QUARKUS_DATASOURCE_URL: jdbc:postgresql://postgres_backend:5432/peddy_backend
       QUARKUS_DATASOURCE_PASSWORD: peddy_backend_password
       QUARKUS_DATASOURCE_USERNAME: peddy
 # the HTTP endpoint
  postgres_backend:
    image: postgres:${POSTGRES_VERSION}
    environment:
      POSTGRES_DB: peddy_backend
      POSTGRES_USER: peddy
      POSTGRES_PASSWORD: peddy_backend_password
    ports:
      - 5432:5432
    volumes:
      - peddy_pgdata:/var/lib/postgresql/data

  nginx_landing:
    build:
      context: nginx_landing
      dockerfile: Dockerfile
  nginx_frontend:
    build:
      context: nginx_frontend
      dockerfile: Dockerfile
    ports:
      - 8888:80
  nginx:
    image: nginx
    depends_on:
      keycloak:
        condition: service_started
      backend:
        condition: service_started
      nginx_frontend:
        condition: service_started
    volumes:
      - ./nginx/development_proxy.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/certbot/www/:/var/www/certbot/:ro
      - ./nginx/certbot/conf/:/etc/nginx/ssl/:ro
    ports:
      - 80:80
      - 443:443
      
  #certbot:
  #  image: certbot/certbot:latest
  #  volumes:
  #    - ./nginx/certbot/www/:/var/www/certbot/:rw
  #    - ./nginx/certbot/conf/:/etc/letsencrypt/:rw

volumes:
  keycloak_pgdata:
  peddy_pgdata: